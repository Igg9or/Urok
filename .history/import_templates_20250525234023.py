import sqlite3
import json

DB = 'database.db'
JSON_FILE = 'templates.json'

with open(JSON_FILE, encoding='utf-8') as f:
    templates = json.load(f)

conn = sqlite3.connect(DB)
cursor = conn.cursor()

success_count = 0
error_count = 0

for tpl in templates:
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if not all(key in tpl for key in ['textbook_id', 'name', 'question_template', 'answer_template', 'parameters']):
            print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω —à–∞–±–ª–æ–Ω —Å –æ—à–∏–±–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {tpl.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
            error_count += 1
            continue
        
        # –ü—ã—Ç–∞–µ–º—Å—è –≤—Å—Ç–∞–≤–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
        cursor.execute('''
            INSERT INTO task_templates 
            (textbook_id, name, question_template, answer_template, parameters)
            VALUES (?, ?, ?, ?, ?)
            ON CONFLICT(textbook_id, name) DO UPDATE SET
                question_template = excluded.question_template,
                answer_template = excluded.answer_template,
                parameters = excluded.parameters
        ''', (
            tpl['textbook_id'],
            tpl['name'],
            tpl['question_template'],
            tpl['answer_template'],
            json.dumps(tpl['parameters'])
        ))
        success_count += 1
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —à–∞–±–ª–æ–Ω–∞ '{tpl.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}': {str(e)}")
        error_count += 1
        conn.rollback()
    else:
        conn.commit()

conn.close()

print(f"\n–ò—Ç–æ–≥:")
print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {success_count}")
print(f"‚ö†Ô∏è –° –æ—à–∏–±–∫–∞–º–∏: {error_count}")
if error_count == 0:
    print("üéâ –í—Å–µ —à–∞–±–ª–æ–Ω—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
else:
    print("–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã –Ω–µ –±—ã–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–≤–æ–¥ –≤—ã—à–µ.")